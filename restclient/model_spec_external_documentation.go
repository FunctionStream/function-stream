/*
Function Stream Service

Manage Function Stream Resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package restclient

import (
	"encoding/json"
)

// checks if the SpecExternalDocumentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecExternalDocumentation{}

// SpecExternalDocumentation struct for SpecExternalDocumentation
type SpecExternalDocumentation struct {
	Description *string `json:"description,omitempty"`
	Url         *string `json:"url,omitempty"`
}

// NewSpecExternalDocumentation instantiates a new SpecExternalDocumentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecExternalDocumentation() *SpecExternalDocumentation {
	this := SpecExternalDocumentation{}
	return &this
}

// NewSpecExternalDocumentationWithDefaults instantiates a new SpecExternalDocumentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecExternalDocumentationWithDefaults() *SpecExternalDocumentation {
	this := SpecExternalDocumentation{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SpecExternalDocumentation) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecExternalDocumentation) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SpecExternalDocumentation) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SpecExternalDocumentation) SetDescription(v string) {
	o.Description = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *SpecExternalDocumentation) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecExternalDocumentation) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *SpecExternalDocumentation) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *SpecExternalDocumentation) SetUrl(v string) {
	o.Url = &v
}

func (o SpecExternalDocumentation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecExternalDocumentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableSpecExternalDocumentation struct {
	value *SpecExternalDocumentation
	isSet bool
}

func (v NullableSpecExternalDocumentation) Get() *SpecExternalDocumentation {
	return v.value
}

func (v *NullableSpecExternalDocumentation) Set(val *SpecExternalDocumentation) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecExternalDocumentation) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecExternalDocumentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecExternalDocumentation(val *SpecExternalDocumentation) *NullableSpecExternalDocumentation {
	return &NullableSpecExternalDocumentation{value: val, isSet: true}
}

func (v NullableSpecExternalDocumentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecExternalDocumentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

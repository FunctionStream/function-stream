/*
Function Stream Service

Manage Function Stream Resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package restclient

import (
	"encoding/json"
)

// checks if the SpecXMLObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecXMLObject{}

// SpecXMLObject struct for SpecXMLObject
type SpecXMLObject struct {
	Attribute *bool   `json:"attribute,omitempty"`
	Name      *string `json:"name,omitempty"`
	Namespace *string `json:"namespace,omitempty"`
	Prefix    *string `json:"prefix,omitempty"`
	Wrapped   *bool   `json:"wrapped,omitempty"`
}

// NewSpecXMLObject instantiates a new SpecXMLObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecXMLObject() *SpecXMLObject {
	this := SpecXMLObject{}
	return &this
}

// NewSpecXMLObjectWithDefaults instantiates a new SpecXMLObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecXMLObjectWithDefaults() *SpecXMLObject {
	this := SpecXMLObject{}
	return &this
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *SpecXMLObject) GetAttribute() bool {
	if o == nil || IsNil(o.Attribute) {
		var ret bool
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecXMLObject) GetAttributeOk() (*bool, bool) {
	if o == nil || IsNil(o.Attribute) {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *SpecXMLObject) HasAttribute() bool {
	if o != nil && !IsNil(o.Attribute) {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given bool and assigns it to the Attribute field.
func (o *SpecXMLObject) SetAttribute(v bool) {
	o.Attribute = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SpecXMLObject) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecXMLObject) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SpecXMLObject) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SpecXMLObject) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *SpecXMLObject) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecXMLObject) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *SpecXMLObject) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *SpecXMLObject) SetNamespace(v string) {
	o.Namespace = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *SpecXMLObject) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecXMLObject) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *SpecXMLObject) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *SpecXMLObject) SetPrefix(v string) {
	o.Prefix = &v
}

// GetWrapped returns the Wrapped field value if set, zero value otherwise.
func (o *SpecXMLObject) GetWrapped() bool {
	if o == nil || IsNil(o.Wrapped) {
		var ret bool
		return ret
	}
	return *o.Wrapped
}

// GetWrappedOk returns a tuple with the Wrapped field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecXMLObject) GetWrappedOk() (*bool, bool) {
	if o == nil || IsNil(o.Wrapped) {
		return nil, false
	}
	return o.Wrapped, true
}

// HasWrapped returns a boolean if a field has been set.
func (o *SpecXMLObject) HasWrapped() bool {
	if o != nil && !IsNil(o.Wrapped) {
		return true
	}

	return false
}

// SetWrapped gets a reference to the given bool and assigns it to the Wrapped field.
func (o *SpecXMLObject) SetWrapped(v bool) {
	o.Wrapped = &v
}

func (o SpecXMLObject) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecXMLObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attribute) {
		toSerialize["attribute"] = o.Attribute
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Wrapped) {
		toSerialize["wrapped"] = o.Wrapped
	}
	return toSerialize, nil
}

type NullableSpecXMLObject struct {
	value *SpecXMLObject
	isSet bool
}

func (v NullableSpecXMLObject) Get() *SpecXMLObject {
	return v.value
}

func (v *NullableSpecXMLObject) Set(val *SpecXMLObject) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecXMLObject) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecXMLObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecXMLObject(val *SpecXMLObject) *NullableSpecXMLObject {
	return &NullableSpecXMLObject{value: val, isSet: true}
}

func (v NullableSpecXMLObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecXMLObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

/*
Function Stream Service

Manage Function Stream Resources

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package restclient

import (
	"encoding/json"
)

// checks if the SpecSwaggerSchemaProps type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecSwaggerSchemaProps{}

// SpecSwaggerSchemaProps struct for SpecSwaggerSchemaProps
type SpecSwaggerSchemaProps struct {
	Discriminator *string                    `json:"discriminator,omitempty"`
	Example       map[string]interface{}     `json:"example,omitempty"`
	ExternalDocs  *SpecExternalDocumentation `json:"externalDocs,omitempty"`
	ReadOnly      *bool                      `json:"readOnly,omitempty"`
	Xml           *SpecXMLObject             `json:"xml,omitempty"`
}

// NewSpecSwaggerSchemaProps instantiates a new SpecSwaggerSchemaProps object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecSwaggerSchemaProps() *SpecSwaggerSchemaProps {
	this := SpecSwaggerSchemaProps{}
	return &this
}

// NewSpecSwaggerSchemaPropsWithDefaults instantiates a new SpecSwaggerSchemaProps object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecSwaggerSchemaPropsWithDefaults() *SpecSwaggerSchemaProps {
	this := SpecSwaggerSchemaProps{}
	return &this
}

// GetDiscriminator returns the Discriminator field value if set, zero value otherwise.
func (o *SpecSwaggerSchemaProps) GetDiscriminator() string {
	if o == nil || IsNil(o.Discriminator) {
		var ret string
		return ret
	}
	return *o.Discriminator
}

// GetDiscriminatorOk returns a tuple with the Discriminator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecSwaggerSchemaProps) GetDiscriminatorOk() (*string, bool) {
	if o == nil || IsNil(o.Discriminator) {
		return nil, false
	}
	return o.Discriminator, true
}

// HasDiscriminator returns a boolean if a field has been set.
func (o *SpecSwaggerSchemaProps) HasDiscriminator() bool {
	if o != nil && !IsNil(o.Discriminator) {
		return true
	}

	return false
}

// SetDiscriminator gets a reference to the given string and assigns it to the Discriminator field.
func (o *SpecSwaggerSchemaProps) SetDiscriminator(v string) {
	o.Discriminator = &v
}

// GetExample returns the Example field value if set, zero value otherwise.
func (o *SpecSwaggerSchemaProps) GetExample() map[string]interface{} {
	if o == nil || IsNil(o.Example) {
		var ret map[string]interface{}
		return ret
	}
	return o.Example
}

// GetExampleOk returns a tuple with the Example field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecSwaggerSchemaProps) GetExampleOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Example) {
		return map[string]interface{}{}, false
	}
	return o.Example, true
}

// HasExample returns a boolean if a field has been set.
func (o *SpecSwaggerSchemaProps) HasExample() bool {
	if o != nil && !IsNil(o.Example) {
		return true
	}

	return false
}

// SetExample gets a reference to the given map[string]interface{} and assigns it to the Example field.
func (o *SpecSwaggerSchemaProps) SetExample(v map[string]interface{}) {
	o.Example = v
}

// GetExternalDocs returns the ExternalDocs field value if set, zero value otherwise.
func (o *SpecSwaggerSchemaProps) GetExternalDocs() SpecExternalDocumentation {
	if o == nil || IsNil(o.ExternalDocs) {
		var ret SpecExternalDocumentation
		return ret
	}
	return *o.ExternalDocs
}

// GetExternalDocsOk returns a tuple with the ExternalDocs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecSwaggerSchemaProps) GetExternalDocsOk() (*SpecExternalDocumentation, bool) {
	if o == nil || IsNil(o.ExternalDocs) {
		return nil, false
	}
	return o.ExternalDocs, true
}

// HasExternalDocs returns a boolean if a field has been set.
func (o *SpecSwaggerSchemaProps) HasExternalDocs() bool {
	if o != nil && !IsNil(o.ExternalDocs) {
		return true
	}

	return false
}

// SetExternalDocs gets a reference to the given SpecExternalDocumentation and assigns it to the ExternalDocs field.
func (o *SpecSwaggerSchemaProps) SetExternalDocs(v SpecExternalDocumentation) {
	o.ExternalDocs = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *SpecSwaggerSchemaProps) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecSwaggerSchemaProps) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *SpecSwaggerSchemaProps) HasReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *SpecSwaggerSchemaProps) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetXml returns the Xml field value if set, zero value otherwise.
func (o *SpecSwaggerSchemaProps) GetXml() SpecXMLObject {
	if o == nil || IsNil(o.Xml) {
		var ret SpecXMLObject
		return ret
	}
	return *o.Xml
}

// GetXmlOk returns a tuple with the Xml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpecSwaggerSchemaProps) GetXmlOk() (*SpecXMLObject, bool) {
	if o == nil || IsNil(o.Xml) {
		return nil, false
	}
	return o.Xml, true
}

// HasXml returns a boolean if a field has been set.
func (o *SpecSwaggerSchemaProps) HasXml() bool {
	if o != nil && !IsNil(o.Xml) {
		return true
	}

	return false
}

// SetXml gets a reference to the given SpecXMLObject and assigns it to the Xml field.
func (o *SpecSwaggerSchemaProps) SetXml(v SpecXMLObject) {
	o.Xml = &v
}

func (o SpecSwaggerSchemaProps) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecSwaggerSchemaProps) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Discriminator) {
		toSerialize["discriminator"] = o.Discriminator
	}
	if !IsNil(o.Example) {
		toSerialize["example"] = o.Example
	}
	if !IsNil(o.ExternalDocs) {
		toSerialize["externalDocs"] = o.ExternalDocs
	}
	if !IsNil(o.ReadOnly) {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if !IsNil(o.Xml) {
		toSerialize["xml"] = o.Xml
	}
	return toSerialize, nil
}

type NullableSpecSwaggerSchemaProps struct {
	value *SpecSwaggerSchemaProps
	isSet bool
}

func (v NullableSpecSwaggerSchemaProps) Get() *SpecSwaggerSchemaProps {
	return v.value
}

func (v *NullableSpecSwaggerSchemaProps) Set(val *SpecSwaggerSchemaProps) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecSwaggerSchemaProps) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecSwaggerSchemaProps) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecSwaggerSchemaProps(val *SpecSwaggerSchemaProps) *NullableSpecSwaggerSchemaProps {
	return &NullableSpecSwaggerSchemaProps{value: val, isSet: true}
}

func (v NullableSpecSwaggerSchemaProps) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecSwaggerSchemaProps) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
